import axios from "axios";

// =========================================
// üåê –ü—É–±–ª–∏—á–Ω—ã–π API ‚Äî –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è: /register, /login
// =========================================
export const publicApi = axios.create({
  baseURL: process.env.NEXT_PUBLIC_API_URL || "http://localhost:8080",
  headers: {
    "Content-Type": "application/json",
  },
  timeout: 10000,
});

// ‚úÖ –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ª–æ–≥–∏–Ω)
export const loginUser = async (credentials) => {
  try {
    const response = await publicApi.post("/login", credentials);
    return response.data; // { token, user }
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ";
  }
};

// ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const registerUser = async (userData) => {
  try {
    const response = await publicApi.post("/register", userData);
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏";
  }
};

// =========================================
// üîí –ó–∞—â–∏—â—ë–Ω–Ω—ã–π API ‚Äî —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è: /profile, /bookings, /protected/hotels
// =========================================
const api = axios.create({
  baseURL: process.env.NEXT_PUBLIC_API_URL
    ? `${process.env.NEXT_PUBLIC_API_URL}/protected`
    : "http://localhost:8080/protected",
  headers: {
    "Content-Type": "application/json",
  },
  timeout: 10000,
});

// ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∏–∑ localStorage
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
api.interceptors.response.use(
  (response) => response,
  (error) => {
    const status = error.response?.status;

    if (status === 401) {
      alert("‚è≥ –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.");
      localStorage.removeItem("token");
      localStorage.removeItem("currentUser");
      window.location.href = "/login";
    } else if (status === 403) {
      alert("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–µ—Å—É—Ä—Å—É.");
    } else if (status >= 500) {
      alert("üí• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }

    return Promise.reject(error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞");
  }
);

// =========================================
// üè® –û—Ç–µ–ª–∏
// =========================================

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –æ—Ç–µ–ª—è –ø–æ ObjectId
export const getHotelById = async (id) => {
  try {
    const response = await api.get(`/hotels/${id}`);
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω";
  }
};

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–µ–ª–µ–π
export const getHotels = async () => {
  try {
    const response = await api.get("/hotels");
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–µ–ª–µ–π";
  }
};

// ‚úÖ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –æ—Ç–µ–ª–µ–π (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
export const clearHotels = async () => {
  try {
    const response = await api.delete("/hotels/clear");
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –æ—Ç–µ–ª–µ–π";
  }
};

// =========================================
// üè® –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
// =========================================

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getMyBookings = async () => {
  try {
    const response = await api.get("/bookings");
    const data = response.data;

    // ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤
    if (Array.isArray(data)) {
      return data;
    } else {
      console.warn("–ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:", data);
      return [];
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:", error);
    return [];
  }
};


// ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
export const addBooking = async (bookingData) => {
  try {
    const response = await api.post("/bookings/add", bookingData);
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏";
  }
};


// ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ _id
export const deleteBooking = async (bookingId) => {
  try {
    if (!bookingId || typeof bookingId !== "string") {
      throw new Error("‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ObjectID");
    }
    const response = await api.delete(`/bookings/${bookingId}`);
    return response;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", error.response?.data || error);
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏";
  }
};




// ‚úÖ –û–ø–ª–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
export const payForBooking = async (bookingId) => {
  try {
    const response = await api.post(`/bookings/${bookingId}/pay`);
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è";
  }
};

// =========================================
// üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
// =========================================

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getUserProfile = async () => {
  try {
    const response = await api.get("/profile");
    return response.data;
  } catch (error) {
    throw error.response?.data || "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è";
  }
};

export default api;
