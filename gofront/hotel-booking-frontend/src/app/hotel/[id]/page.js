"use client";

import { useState, useEffect } from "react";
import { useParams } from "next/navigation";
import { useRouter } from "next/navigation";
import { useAuth } from "@/context/AuthContext";
import api from "@/utils/api";
import Map from "@/components/Map";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

export default function HotelPage() {
  const { id } = useParams();
  const router = useRouter();
  const { isLoggedIn } = useAuth();

  const [hotel, setHotel] = useState(null);
  const [checkIn, setCheckIn] = useState(null);
  const [checkOut, setCheckOut] = useState(null);
  const [totalPrice, setTotalPrice] = useState(0);
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(true);

  // üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ObjectId
  const isValidObjectId = (id) => /^[a-f\d]{24}$/i.test(id);

  // üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª—è –ø–æ ID
  useEffect(() => {
    const fetchHotel = async () => {
      try {
        if (!isValidObjectId(id)) {
          throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ObjectId");
        }
        const response = await api.get(`/hotels/${id}`);
        setHotel(response.data);
      } catch (err) {
        setError("–û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–µ–ª—è:", err);
      } finally {
        setLoading(false);
      }
    };
    if (id) {
      fetchHotel();
    }
  }, [id]);

  // üìå –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
  const calculateTotalPrice = (checkIn, checkOut) => {
    if (checkIn && checkOut) {
      const start = new Date(checkIn);
      const end = new Date(checkOut);
      const nights = Math.max(1, (end - start) / (1000 * 60 * 60 * 24));
      return nights * (hotel?.price || 0);
    }
    return 0;
  };

  // üìå –§—É–Ω–∫—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleBooking = async () => {
    if (!isLoggedIn) {
      alert("–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –ø–µ—Ä–µ–¥ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º.");
      router.push("/login");
      return;
    }
  
    if (!checkIn || !checkOut) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞ –∏ –≤—ã–µ–∑–¥–∞!");
      return;
    }
  
    const total = calculateTotalPrice(checkIn, checkOut);
    const bookingData = {
      hotel_name: hotel.name,
      city: hotel.city,
      check_in: checkIn.toISOString().split("T")[0],
      check_out: checkOut.toISOString().split("T")[0],
      price_per_night: hotel.price,
      total_price: total,
      paid: false,
    };
  
    console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", bookingData); // üìå –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
  
    try {
      const response = await api.post("/bookings/add", bookingData);
      alert(`‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: ${response.data.message}`);
      router.push("/my-bookings"); // –í–º–µ—Å—Ç–æ "/my-bookings"

    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏:", error.response?.data || error);
      alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏: " + (error.response?.data?.error || "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"));
    }
  };

  if (loading) return <p className="text-center text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className="text-center text-red-500">{error}</p>;

  return (
    <div className="container mx-auto py-10">
      <div className="bg-white shadow-lg rounded-lg overflow-hidden">
        <img src={hotel.image} alt={hotel.name} className="w-full h-96 object-cover" />
        <div className="p-6">
          <h1 className="text-4xl font-bold text-black">{hotel.name}</h1>
          <p className="text-lg text-black">{hotel.city}</p>
          <p className="mt-4 text-lg text-black">{hotel.description}</p>
          <p className="text-2xl font-bold mt-4 text-black">${hotel.price} / –Ω–æ—á—å</p>

          {/* üìÖ –§–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <div className="mt-6">
            <h2 className="text-xl font-bold mb-2 text-black">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã</h2>

            <label className="block text-black">üìÖ –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞:</label>
            <DatePicker
              selected={checkIn}
              onChange={(date) => {
                setCheckIn(date);
                setTotalPrice(calculateTotalPrice(date, checkOut));
              }}
              dateFormat="dd.MM.yyyy"
              minDate={new Date()}
              className="w-full p-2 border rounded mt-2 text-black bg-white cursor-pointer"
            />

            <label className="block mt-4 text-black">üìÖ –î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞:</label>
            <DatePicker
              selected={checkOut}
              onChange={(date) => {
                setCheckOut(date);
                setTotalPrice(calculateTotalPrice(checkIn, date));
              }}
              dateFormat="dd.MM.yyyy"
              minDate={checkIn || new Date()}
              className="w-full p-2 border rounded mt-2 text-black bg-white cursor-pointer"
            />

            <p className="mt-4 text-lg font-semibold text-black">üí∞ –ò—Ç–æ–≥–æ: ${totalPrice || 0}</p>

            <button
              onClick={handleBooking}
              className="mt-6 w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition"
            >
              –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
            </button>
          </div>

          {/* üó∫Ô∏è –ö–∞—Ä—Ç–∞ —Å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º */}
          <div className="mt-6">
            <h2 className="text-xl font-bold mb-2 text-black">üó∫Ô∏è –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–µ–ª—è</h2>
            <Map
              lat={hotel.lat ?? 0}
              lng={hotel.lng ?? 0}
              name={hotel.name}
            />
          </div>
        </div>
      </div>
    </div>
  );
}
