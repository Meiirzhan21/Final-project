"use client";

import { useEffect, useState, useRef } from "react";
import { useRouter } from "next/navigation";
import { useAuth } from "@/context/AuthContext";
import { getMyBookings, deleteBooking } from "@/utils/api";

export default function BookingsPage() {
  const [bookings, setBookings] = useState([]);
  const [loading, setLoading] = useState(true);
  const [alertMessage, setAlertMessage] = useState("");
  const router = useRouter();
  const { isLoggedIn } = useAuth();
  const isProcessing = useRef(false);

  // üìå –ü–æ–ª—É—á–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞
  useEffect(() => {
    if (!isLoggedIn) {
      alert("–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!");
      router.replace("/login");
      return;
    }

    const fetchBookings = async () => {
      try {
        const data = await getMyBookings();
        if (Array.isArray(data)) {
          setBookings(data);
        } else {
          console.error("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:", data);
          setBookings([]);
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:", error);
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.");
      } finally {
        setLoading(false);
      }
    };

    fetchBookings();
  }, [isLoggedIn, router]);

  // üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
  useEffect(() => {
    const query = new URLSearchParams(window.location.search);
    if (query.get("success") === "true" && query.get("bookingId")) {
      const bookingId = query.get("bookingId");

      if (!isProcessing.current) {
        isProcessing.current = true;

        setBookings((prevBookings) =>
          prevBookings.map((b) =>
            b._id === bookingId ? { ...b, paid: true } : b
          )
        );

        setAlertMessage("‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");

        setTimeout(() => {
          setAlertMessage("");
          router.replace("/my-bookings");
          isProcessing.current = false;
        }, 3000);
      }
    }
  }, [router]);

  // üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleDeleteBooking = async (bookingId) => {
    try {
      if (!bookingId) {
        alert("‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!");
        return;
      }
  
      const confirmDelete = window.confirm(
        "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ?"
      );
      if (!confirmDelete) return;
  
      // –ü—Ä–∏–≤–æ–¥–∏–º ObjectId –∫ —Å—Ç—Ä–æ–∫–µ
      const id = typeof bookingId === "object" ? bookingId.toString() : bookingId;
  
      const response = await deleteBooking(id);
  
      if (response && response.status === 200) {
        setBookings((prev) =>
          Array.isArray(prev)
            ? prev.filter((booking) => booking._id !== bookingId)
            : []
        );
        alert("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.");
      } else {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", error);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
  };
  

  if (loading) {
    return (
      <p className="text-center text-gray-600">
        ‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...
      </p>
    );
  }

  return (
    <div className="container mx-auto py-10">
      {/* –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
      {alertMessage && (
        <div className="fixed top-5 left-1/2 transform -translate-x-1/2 bg-black text-white py-3 px-6 rounded">
          {alertMessage}
        </div>
      )}

      <h1 className="text-3xl font-bold text-center mb-6 text-black">
        üõéÔ∏è –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      </h1>

      {Array.isArray(bookings) && bookings.length === 0 ? (
        <p className="text-center text-gray-600">
          –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.
        </p>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {Array.isArray(bookings) &&
            bookings.map((booking, index) => (
              <div
                key={booking._id || `booking-${index}`} // ‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è React
                className="bg-white rounded-lg shadow-lg p-4 border border-gray-200"
              >
                <h2 className="text-xl font-bold text-black">
                  üè® {booking.hotel_name || "–û—Ç–µ–ª—å"}
                </h2>
                <p className="text-gray-600">üìç {booking.city || "–ì–æ—Ä–æ–¥"}</p>
                <p className="text-sm text-black">
                  üìÖ –ó–∞–µ–∑–¥: {booking.check_in || "N/A"} ‚Äî –í—ã–µ–∑–¥:{" "}
                  {booking.check_out || "N/A"}
                </p>
                <p className="text-lg font-semibold mt-2 text-black">
                  üí∏ –¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å: ${booking.price_per_night || "0.00"}
                </p>
                <p className="text-lg font-bold mt-2 text-green-600">
                  üí∞ –ò—Ç–æ–≥–æ: ${booking.total_price || "0.00"}
                </p>

                {booking.paid ? (
                  <p className="text-green-500 font-bold mt-4 flex items-center">
                    ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ
                  </p>
                ) : (
                  <p className="text-red-500 font-bold mt-4 flex items-center">
                    ‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ
                  </p>
                )}

                {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
                // ‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π _id
                // ‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥: –ò—Å–ø–æ–ª—å–∑—É–µ–º _id –∏–∑ MongoDB
                <button
                onClick={() => handleDeleteBooking(booking._id)}
                className="mt-4 w-full bg-red-600 text-white py-2 rounded hover:bg-red-700 transition">
                  üóë –£–¥–∞–ª–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
                  </button>
              </div>
            ))}
        </div>
      )}
    </div>
  );
}
