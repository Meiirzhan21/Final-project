"use client";
import { useEffect, useState } from "react";
import api from "@/utils/api";
import { useRouter } from "next/navigation";

export default function Profile() {
  const [user, setUser] = useState(null);
  const [bookings, setBookings] = useState([]); 
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    const fetchProfileData = async () => {
      try {
        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        const profileResponse = await api.get("/profile");
        console.log("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å:", profileResponse.data);
        setUser(profileResponse.data);

        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        const bookingsResponse = await api.get("/bookings");
        console.log("‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", bookingsResponse.data);

        // üìå –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø—Ä–∏—à—ë–ª –º–∞—Å—Å–∏–≤
        if (Array.isArray(bookingsResponse.data)) {
          setBookings(bookingsResponse.data);
        } else {
          console.warn("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:", bookingsResponse.data);
          setBookings([]);
        }
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è");
        localStorage.removeItem("token");
        router.replace("/login");
      } finally {
        setLoading(false);
      }
    };

    fetchProfileData();
  }, [router]);

  if (loading) {
    return <p className="text-center text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  }

  if (error) {
    return <p className="text-center text-red-500">{error}</p>;
  }

  return (
    <div className="container mx-auto py-10">
      <h1 className="text-3xl font-bold text-center mb-6 text-black">üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>

      {/* üìå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {user && (
        <div className="bg-white p-6 rounded-lg shadow-md mb-6">
          <h2 className="text-2xl font-bold text-black mb-4">üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
          <p className="text-lg text-black"><strong>–ò–º—è:</strong> {user.username}</p>
          <p className="text-lg text-black"><strong>–†–æ–ª—å:</strong> {user.role || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}</p>
          <p className="text-lg text-black"><strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {new Date(user.createdAt).toLocaleDateString()}</p>
        </div>
      )}

      {/* üìå –°–µ–∫—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π */}
      <h2 className="text-2xl font-bold mt-6 text-black">üìë –ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
      {bookings.length === 0 ? (
        <p className="text-gray-600">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.</p>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-4">
          {bookings.map((booking, index) => (
            <div key={index} className="bg-white rounded-lg shadow-lg p-4 border">
              <h3 className="text-lg font-bold text-black">{booking.hotel_name}</h3>
              <p className="text-black">üìç –ì–æ—Ä–æ–¥: {booking.city || "–ù–µ —É–∫–∞–∑–∞–Ω"}</p>
              <p className="text-black">üìÖ –ó–∞–µ–∑–¥: {new Date(booking.check_in).toLocaleDateString()}</p>
              <p className="text-black">üìÖ –í—ã–µ–∑–¥: {new Date(booking.check_out).toLocaleDateString()}</p>
              <p className="text-lg font-semibold mt-2 text-black">
                üí∞ –¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å: ${booking.price_per_night?.toFixed(2) || "‚Äî"}
              </p>
              <p className="text-lg font-bold mt-2 text-black">
                üí≥ –ò—Ç–æ–≥–æ: ${booking.total_price?.toFixed(2) || "‚Äî"}
              </p>
              {booking.paid ? (
                <p className="text-green-600 font-bold mt-4">‚úÖ –û–ø–ª–∞—á–µ–Ω–æ</p>
              ) : (
                <p className="text-red-500 font-bold mt-4">‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ</p>
              )}
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
